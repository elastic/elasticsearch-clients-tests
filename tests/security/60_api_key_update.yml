---
requires:
  stack: true
  serverless: false
---
setup:
  - do:
      security.put_role:
        name: "user_role"
        body: >
          {
            "cluster": ["manage_own_api_key"],
            "indices": [
              {
                "names": "*",
                "privileges": ["all"]
              }
            ]
          }

  - do:
      security.put_user:
        username: "api_key_user_1"
        body: >
          {
            "password" : "x-pack-test-password",
            "roles" : [ "user_role" ],
            "full_name" : "API key user"
          }

---
teardown:
  - do:
      security.delete_role:
        name: "user_role"
        ignore: 404

  - do:
      security.delete_user:
        username: "api_key_user_1"
        ignore: 404
---
"Test update api key":
  - do:
      security.create_api_key:
        body: >
          {
            "name": "user1-api-key",
            "role_descriptors": {
              "role-a": {
                "cluster": ["none"],
                "index": [
                  {
                    "names": ["index-a"],
                    "privileges": ["read"]
                  }
                ]
              }
            }
          }
  - match: { name: "user1-api-key" }
  - is_true: id
  - is_true: api_key
  - set: { id: user_key_id }

  - do:
      security.update_api_key:
        id: "$user_key_id"
        body: >
          {
            "role_descriptors": {
              "role-a": {
                "cluster": ["all"],
                "index": [
                  {
                    "names": ["index-a"],
                    "privileges": ["write"]
                  },
                  {
                    "names": ["index-b"],
                    "privileges": ["read"]
                  }
                ]
              }
            },
            "metadata": {
               "letter": "a",
               "number": 42
            }
          }
  - match: { updated: true }

  - do:
      security.bulk_update_api_keys:
        body: >
          {
            "ids": ["$user_key_id"],
            "role_descriptors": {
              "role-a": {
                "cluster": ["all"],
                "index": [
                  {
                    "names": ["index-a"],
                    "privileges": ["write"]
                  },
                  {
                    "names": ["index-b"],
                    "privileges": ["read"]
                  }
                ]
              }
            },
            "metadata": {
               "letter": "a",
               "number": 43
            }
          }
  - length: { "noops": 0 }
  - length: { "updated": 1 }
  - match: {
    "updated.0": "$user_key_id"
  }
